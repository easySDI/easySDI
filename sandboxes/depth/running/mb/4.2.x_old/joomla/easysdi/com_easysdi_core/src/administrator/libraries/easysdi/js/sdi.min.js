
Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.LayerTree=Ext.extend(gxp.plugins.LayerTree,{ptype:"sdi_gxp_layertree",createOutputConfig:function(){var treeRoot=new Ext.tree.TreeNode({text:this.rootNodeText,expanded:true,checked:false,isTarget:false,allowDrop:false,iconCls:"sdi-gxp-tree-node-root",listeners:{checkchange:function(node,checked){node.eachChild(function(n){n.getUI().toggleCheck(checked);});}}});var baseAttrs;if(this.initialConfig.loader&&this.initialConfig.loader.baseAttrs){baseAttrs=this.initialConfig.loader.baseAttrs;}
var defaultGroup=this.defaultGroup,plugin=this,groupConfig,exclusive;for(var group in this.groups){groupConfig=typeof this.groups[group]=="string"?{title:this.groups[group]}:this.groups[group];exclusive=groupConfig.exclusive;treeRoot.appendChild(new GeoExt.tree.LayerContainer(Ext.apply({text:groupConfig.title,iconCls:"gxp-folder",expanded:true,checked:false,group:group==this.defaultGroup?undefined:group,loader:new GeoExt.tree.LayerLoader({baseAttrs:exclusive?Ext.apply({checkedGroup:Ext.isString(exclusive)?exclusive:group},baseAttrs):baseAttrs,store:this.target.mapPanel.layers,filter:(function(group){return function(record){return(record.get("group")||defaultGroup)==group&&record.getLayer().displayInLayerSwitcher==true;};})(group),createNode:function(attr){plugin.configureLayerNode(this,attr);return GeoExt.tree.LayerLoader.prototype.createNode.apply(this,arguments);}}),singleClickExpand:true,allowDrag:false,listeners:{append:function(tree,node){node.expand();},checkchange:function(node,checked){node.eachChild(function(n){n.getUI().toggleCheck(checked);});}}},groupConfig)));}
return{xtype:"treepanel",root:treeRoot,rootVisible:true,shortTitle:this.shortTitle,autoScroll:true,border:false,enableDD:true,selModel:new Ext.tree.DefaultSelectionModel({listeners:{beforeselect:this.handleBeforeSelect,scope:this}}),contextMenu:new Ext.menu.Menu({items:[]})};},});Ext.preg(sdi.gxp.plugins.LayerTree.prototype.ptype,sdi.gxp.plugins.LayerTree);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.Print=Ext.extend(gxp.plugins.Print,{ptype:"sdi_gxp_print",addActions:function(){if(this.printService!==null||this.printCapabilities!=null){var printProvider=new sdi.geoext.data.PrintProvider({capabilities:this.printCapabilities,url:this.printService,printurl:this.printURL,createurl:this.createURL,customParams:this.customParams,autoLoad:false,listeners:{beforedownload:function(provider,url){if(this.openInNewWindow===true){window.open(url);return false;}},beforeencodelegend:function(provider,jsonData,legend){if(legend&&legend.ptype==="gxp_layermanager"){var encodedLegends=[];var output=legend.output;if(output&&output[0]){output[0].getRootNode().cascade(function(node){if(node.component&&!node.component.hidden){var cmp=node.component;var encFn=this.encoders.legends[cmp.getXType()];encodedLegends=encodedLegends.concat(encFn.call(this,cmp,jsonData.pages[0].scale));}},provider);}
jsonData.legends=encodedLegends;return false;}},beforeprint:function(){printWindow.items.get(0).printMapPanel.layers.each(function(l){var params=l.get("layer").params;for(var p in params){if(params[p]instanceof Array){params[p]=params[p].join(",");}}});},loadcapabilities:function(){if(printButton){printButton.initialConfig.disabled=false;printButton.enable();}},print:function(){try{printWindow.close();}catch(err){}},printException:function(cmp,response){this.target.displayXHRTrouble&&this.target.displayXHRTrouble(response);},scope:this}});var actions=gxp.plugins.Print.superclass.addActions.call(this,[{menuText:this.menuText,buttonText:this.buttonText,tooltip:this.tooltip,iconCls:"gxp-icon-print",disabled:this.printCapabilities!==null?false:true,handler:function(){var supported=getPrintableLayers();if(supported.length>0){if(isGoogleLayerSelected()||isBingLayerSelected())
{var mes="";if(isGoogleLayerSelected())
{mes=mes+this.googleLayerCanNotBePrinted;}
if(isBingLayerSelected())
{mes=mes+this.bingLayerCanNotBePrinted;}
Ext.Msg.alert(this.someLayersNotPrintableText,mes,function(){var printWindow=createPrintWindow.call(this);showPrintWindow.call(this);return printWindow;},this);}
else
{var printWindow=createPrintWindow.call(this);showPrintWindow.call(this);return printWindow;}}else{if(isGoogleLayerSelected()||isBingLayerSelected())
{var mes="";if(isGoogleLayerSelected())
{mes=mes+this.googleLayerCanNotBePrinted;}
if(isBingLayerSelected())
{mes=mes+this.bingLayerCanNotBePrinted;}
Ext.Msg.alert(this.notAllNotPrintableText,mes);}
else
{Ext.Msg.alert(this.notAllNotPrintableText,this.nonePrintableText);}}},scope:this,listeners:{render:function(){printProvider.loadCapabilities();}}}]);var printButton=actions[0].items[0];var printWindow;function destroyPrintComponents(){if(printWindow){try{var panel=printWindow.items.first();panel.printMapPanel.printPage.destroy();}catch(err){}
printWindow=null;}}
var mapPanel=this.target.mapPanel;function getPrintableLayers(){var supported=[];mapPanel.layers.each(function(record){var layer=record.getLayer();if(isPrintable(layer)){supported.push(layer);}});return supported;}
function isGoogleLayerSelected(){var is=false;mapPanel.layers.each(function(record){var layer=record.getLayer();if(layer.getVisibility()===true&&layer instanceof OpenLayers.Layer.Google)
is=true;});return is;}
function isBingLayerSelected(){var is=false;mapPanel.layers.each(function(record){var layer=record.getLayer();if(layer.getVisibility()===true&&layer instanceof OpenLayers.Layer.Bing)
is=true;});return is;}
function isPrintable(layer){return layer.getVisibility()===true&&(layer instanceof OpenLayers.Layer.WMS||layer instanceof OpenLayers.Layer.OSM||layer instanceof OpenLayers.Layer.WMTS);}
function createPrintWindow(){var legend=null;if(this.includeLegend===true){var key,tool;for(key in this.target.tools){tool=this.target.tools[key];if(tool.ptype==="gxp_legend"){legend=tool.getLegendPanel();break;}}
if(legend===null){for(key in this.target.tools){tool=this.target.tools[key];if(tool.ptype==="gxp_layermanager"){legend=tool;break;}}}}
printWindow=new Ext.Window({title:this.previewText,modal:true,border:false,autoHeight:true,resizable:false,width:360,items:[new sdi.geoext.ux.PrintPreview({minWidth:336,mapTitle:this.target.about&&this.target.about["title"],comment:this.target.about&&this.target.about["abstract"],printMapPanel:{autoWidth:true,height:Math.min(420,Ext.get(document.body).getHeight()-150),limitScales:true,map:Ext.applyIf({controls:[new OpenLayers.Control.Navigation({zoomWheelEnabled:false,zoomBoxEnabled:false}),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel(),new OpenLayers.Control.Attribution()],eventListeners:{preaddlayer:function(evt){return isPrintable(evt.layer);}}},mapPanel.initialConfig.map),items:[{xtype:"gx_zoomslider",vertical:true,height:100,aggressive:true}],listeners:{afterlayout:function(evt){printWindow.setWidth(Math.max(360,this.getWidth()+24));printWindow.center();}}},printProvider:printProvider,includeLegend:this.includeLegend,legend:legend,sourceMap:mapPanel})],listeners:{beforedestroy:destroyPrintComponents}});return printWindow;}
function showPrintWindow(){printWindow.show();printWindow.setWidth(0);var tb=printWindow.items.get(0).items.get(0);var w=0;tb.items.each(function(item){if(item.getEl()){w+=item.getWidth();}});printWindow.setWidth(Math.max(printWindow.items.get(0).printMapPanel.getWidth(),w+20));printWindow.center();}
return actions;}}});Ext.preg(sdi.gxp.plugins.Print.prototype.ptype,sdi.gxp.plugins.Print);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.LayerManager=Ext.extend(sdi.gxp.plugins.LayerTree,{ptype:"sdi_gxp_layermanager",baseNodeText:"Base Maps",createOutputConfig:function(){var tree=sdi.gxp.plugins.LayerManager.superclass.createOutputConfig.apply(this,arguments);Ext.applyIf(tree,Ext.apply({cls:"gxp-layermanager-tree",lines:false,useArrows:true,plugins:[{ptype:"gx_treenodecomponent"}]},this.treeConfig));return tree;},});Ext.preg(sdi.gxp.plugins.LayerManager.prototype.ptype,sdi.gxp.plugins.LayerManager);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.BingSource=Ext.extend(gxp.plugins.BingSource,{ptype:"sdi_gxp_bingsource",createLayerRecord:function(config){var record=sdi.gxp.plugins.BingSource.superclass.createLayerRecord.apply(this,arguments);record.json=config;return record;}});Ext.preg(sdi.gxp.plugins.BingSource.prototype.ptype,sdi.gxp.plugins.BingSource);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.GoogleSource,{ptype:"sdi_gxp_googlesource",createLayerRecord:function(config){var record=sdi.gxp.plugins.GoogleSource.superclass.createLayerRecord.apply(this,arguments);record.json=config;return record;}});Ext.preg(sdi.gxp.plugins.GoogleSource.prototype.ptype,sdi.gxp.plugins.GoogleSource);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.OSMSource=Ext.extend(gxp.plugins.OSMSource,{ptype:"sdi_gxp_osmsource",createLayerRecord:function(config){var record=sdi.gxp.plugins.OSMSource.superclass.createLayerRecord.apply(this,arguments);record.json=config;return record;}});Ext.preg(sdi.gxp.plugins.OSMSource.prototype.ptype,sdi.gxp.plugins.OSMSource);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.LoadingIndicator=Ext.extend(gxp.plugins.LoadingIndicator,{ptype:"sdi_gxp_loadingindicator",init:function(target){var map=target instanceof GeoExt.MapPanel?target.map:target.mapPanel.map;map.events.register("preaddlayer",this,function(e){var layer=e.layer;if(layer instanceof OpenLayers.Layer.WMS||layer instanceof OpenLayers.Layer.WMTS){layer.events.on({"loadstart":function(){this.layerCount++;if(!this.busyMask){this.busyMask=new Ext.LoadMask(map.div,{msg:this.loadingMapMessage});}
this.busyMask.show();if(this.onlyShowOnFirstLoad===true){layer.events.unregister("loadstart",this,arguments.callee);}},"loadend":function(){this.layerCount--;if(this.layerCount===0){this.busyMask.hide();}
if(this.onlyShowOnFirstLoad===true){layer.events.unregister("loadend",this,arguments.callee);}},scope:this});}});}});Ext.preg(sdi.gxp.plugins.LoadingIndicator.prototype.ptype,sdi.gxp.plugins.LoadingIndicator);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.WMSSource=Ext.extend(gxp.plugins.WMSSource,{ptype:"sdi_gxp_wmssource",createLayerRecord:function(config){var record=sdi.gxp.plugins.WMSSource.superclass.createLayerRecord.apply(this,arguments);record.data.layer.attribution=config.attribution;return record;}});Ext.preg(sdi.gxp.plugins.WMSSource.prototype.ptype,sdi.gxp.plugins.WMSSource);Ext.namespace("sdi.gxp.widgets");sdi.gxp.ScaleOverlay=Ext.extend(gxp.ScaleOverlay,{addScaleLine:function(){var scaleLinePanel=new Ext.BoxComponent({autoEl:{tag:"div",cls:"olControlScaleLine overlay-element overlay-scaleline"}});this.on("afterlayout",function(){scaleLinePanel.getEl().dom.style.position='relative';scaleLinePanel.getEl().dom.style.display='inline';this.getEl().on("click",this.stopMouseEvents,this);this.getEl().on("mousedown",this.stopMouseEvents,this);},this);scaleLinePanel.on('render',function(){var scaleLine=new OpenLayers.Control.ScaleLine({bottomInUnits:SdiScaleLineParams.bottomInUnits,bottomOutUnits:SdiScaleLineParams.bottomOutUnits,topInUnits:SdiScaleLineParams.topInUnits,topOutUnits:SdiScaleLineParams.topOutUnits,geodesic:true,div:scaleLinePanel.getEl().dom});this.map.addControl(scaleLine);scaleLine.activate();},this);this.add(scaleLinePanel);}});Ext.reg('sdi_gxp_scaleoverlay',sdi.gxp.ScaleOverlay);Ext.namespace("gxp");var sourceConfig;var layerConfig;gxp.Viewer.prototype.addExtraLayer=function(lsourceConfig,llayerConfig){sourceConfig=lsourceConfig;layerConfig=llayerConfig;if(this.sources[sourceConfig.id]===undefined){this.sources[sourceConfig.id]=sourceConfig;}
this.initialConfig.map.layers.push(layerConfig);var queue=[];queue.push(this.createSourceLoader(sourceConfig.id));gxp.util.dispatch(queue,this.reactivate,this);};gxp.Viewer.prototype.reactivate=function(){Ext.QuickTips.init();var mapConfig=this.initialConfig.map;if(mapConfig&&mapConfig.layers){var conf,source,record,baseRecords=[],overlayRecords=[];conf=mapConfig.layers[mapConfig.layers.length-1];source=this.layerSources[conf.source];if(source){if(source.id===sourceConfig.id){record=source.createLayerRecord(conf);if(record){if(record.get("group")==="background"){baseRecords.push(record);}else{overlayRecords.push(record);}}}}
var panel=this.mapPanel;var map=panel.map;extent=record.getLayer().maxExtent.clone();map.zoomToExtent(extent);var records=baseRecords.concat(overlayRecords);if(records.length){panel.layers.add(records);}}
this.checkLayerRecordQueue();this.fireEvent("ready");};Ext.namespace("sdi.geoext.data");sdi.geoext.data.PrintProvider=Ext.extend(GeoExt.data.PrintProvider,{loadCapabilities:function(){if(!this.url){return;}
var url=this.url+"info.json";Ext.Ajax.request({url:url,method:"GET",disableCaching:false,success:function(response){this.capabilities=Ext.decode(response.responseText);this.capabilities.createURL=this.createurl;this.capabilities.printURL=this.printurl;this.loadStores();},params:this.initialConfig.baseParams,scope:this});}});Ext.namespace("sdi.geoext.ux");sdi.geoext.ux.PrintPreview=Ext.extend(GeoExt.ux.PrintPreview,{initComponent:function(){var printMapPanelOptions={sourceMap:this.sourceMap,printProvider:this.printProvider};if(this.printMapPanel){if(!(this.printMapPanel instanceof GeoExt.PrintMapPanel)){printMapPanelOptions.xtype="gx_printmappanel";this.printMapPanel=new sdi.geoext.widgets.PrintMapPanel(Ext.applyIf(this.printMapPanel,printMapPanelOptions));}}else{this.printMapPanel=new sdi.geoext.widgets.PrintMapPanel(printMapPanelOptions);}
this.sourceMap=this.printMapPanel.sourceMap;this.printProvider=this.printMapPanel.printProvider;this.form=this.createForm();if(!this.items){this.items=[];}
this.items.push(this.createToolbar(),{xtype:"container",cls:"gx-printpreview",autoHeight:this.autoHeight,autoWidth:this.autoWidth,items:[this.form,this.printMapPanel]});GeoExt.ux.PrintPreview.superclass.initComponent.call(this);this.addMapOverlay&&this.printMapPanel.add(this.createMapOverlay());this.printMapPanel.on({"resize":this.updateSize,scope:this});this.on({"render":function(){if(!this.busyMask){this.busyMask=new Ext.LoadMask(this.getEl(),{msg:this.creatingPdfText});}
this.printProvider.on({"beforeprint":this.busyMask.show,"print":this.busyMask.hide,"printexception":this.busyMask.hide,scope:this.busyMask});},scope:this});}});Ext.namespace("sdi.geoext.widgets");sdi.geoext.widgets.PrintMapPanel=Ext.extend(GeoExt.PrintMapPanel,{initComponent:function(){if(this.sourceMap instanceof GeoExt.MapPanel){this.sourceMap=this.sourceMap.map;}
if(!this.map){this.map={};}
Ext.applyIf(this.map,{projection:this.sourceMap.getProjection(),maxExtent:this.sourceMap.getMaxExtent(),maxResolution:this.sourceMap.getMaxResolution(),units:this.sourceMap.getUnits()});if(!(this.printProvider instanceof GeoExt.data.PrintProvider)){this.printProvider=new GeoExt.data.PrintProvider(this.printProvider);}
this.printPage=new GeoExt.data.PrintPage({printProvider:this.printProvider});this.previewScales=new Ext.data.Store();this.previewScales.add(this.printProvider.scales.getRange());this.layers=[];var layer;Ext.each(this.sourceMap.layers,function(layer){if(layer.getVisibility()===true){if(layer instanceof OpenLayers.Layer.Vector){var features=layer.features,clonedFeatures=new Array(features.length),vector=new OpenLayers.Layer.Vector(layer.name);for(var i=0,ii=features.length;i<ii;++i){clonedFeatures[i]=features[i].clone();}
vector.addFeatures(clonedFeatures,{silent:true});this.layers.push(vector);}else{var l=layer.clone();try{l.setVisibility(layer.getVisibility());}catch(err)
{}
this.layers.push(l);}}},this);this.extent=this.sourceMap.getExtent();GeoExt.PrintMapPanel.superclass.initComponent.call(this);}});Ext.namespace("sdi.plugins");sdi.plugins.SearchCatalog=Ext.extend(gxp.plugins.Tool,{ptype:"sdi_searchcatalog",addActionMenuText:"Search catalog",addActionTip:"Search catalog",addButtonText:"Search catalog",untitledText:"Untitled",doneText:"Done",constructor:function(config){gxp.plugins.AddLayers.superclass.constructor.apply(this,arguments);},addActions:function(){var commonOptions={tooltip:this.addActionTip,text:this.addActionText,menuText:this.addActionMenuText,disabled:true,iconCls:"gxp-icon-addlayersfromcatalog"};options=Ext.apply(commonOptions,{handler:this.showCatalogFrame,scope:this});var actions=gxp.plugins.AddLayers.superclass.addActions.apply(this,[options]);this.target.on("ready",function(){actions[0].enable();},this);return actions;},showCatalogFrame:function(){SqueezeBox.initialize({});SqueezeBox.resize({x:this.initialConfig.iwidth,y:this.initialConfig.iheight});SqueezeBox.setContent('iframe',this.initialConfig.url);}});Ext.preg(sdi.plugins.SearchCatalog.prototype.ptype,sdi.plugins.SearchCatalog);Ext.namespace("sdi.plugins");sdi.plugins.LayerDetailSheet=Ext.extend(gxp.plugins.Tool,{ptype:"sdi_layerdetailsheet",layerDetailMenuText:"Layer details sheet",layerDetailActionTip:"Layer details sheet",addActions:function(){var selectedLayer;var actions=sdi.plugins.LayerDetailSheet.superclass.addActions.apply(this,[{menuText:this.layerDetailMenuText,iconCls:"gxp-icon-getfeatureinfo",disabled:true,tooltip:this.layerDetailActionTip,handler:function(){var record=selectedLayer;SqueezeBox.initialize({});SqueezeBox.resize({x:this.initialConfig.iwidth,y:this.initialConfig.iheight});SqueezeBox.setContent('iframe',record.json.href);},scope:this}]);var layerDetailAction=actions[0];this.target.on("layerselectionchange",function(record){selectedLayer=record;layerDetailAction.setDisabled(!record||!record.json||!record.json.href);},this);return actions;}});Ext.preg(sdi.plugins.LayerDetailSheet.prototype.ptype,sdi.plugins.LayerDetailSheet);Ext.namespace("sdi.plugins");sdi.plugins.LayerDownload=Ext.extend(gxp.plugins.Tool,{ptype:"sdi_layerdownload",layerDownloadMenuText:"Download",layerDownloadActionTip:"Download",addActions:function(){var selectedLayer;var actions=sdi.plugins.LayerDownload.superclass.addActions.apply(this,[{menuText:this.layerDownloadMenuText,iconCls:"gxp-icon-filebrowse",disabled:true,tooltip:this.layerDownloadActionTip,handler:function(){var record=selectedLayer;SqueezeBox.initialize({});SqueezeBox.resize({x:this.initialConfig.iwidth,y:this.initialConfig.iheight});SqueezeBox.setContent('iframe',record.json.download);},scope:this}]);var layerDownloadAction=actions[0];this.target.on("layerselectionchange",function(record){selectedLayer=record;layerDownloadAction.setDisabled(!record||!record.json||!record.json.download);},this);return actions;}});Ext.preg(sdi.plugins.LayerDownload.prototype.ptype,sdi.plugins.LayerDownload);Ext.namespace("sdi.plugins");sdi.plugins.LayerOrder=Ext.extend(gxp.plugins.Tool,{ptype:"sdi_layerorder",layerOrderMenuText:"Order",layerOrderActionTip:"Order",addActions:function(){var selectedLayer;var actions=sdi.plugins.LayerDownload.superclass.addActions.apply(this,[{menuText:this.layerOrderMenuText,iconCls:"gxp-icon-addnote",disabled:true,tooltip:this.layerOrderActionTip,handler:function(){var record=selectedLayer;SqueezeBox.initialize({});SqueezeBox.resize({x:this.initialConfig.iwidth,y:this.initialConfig.iheight});SqueezeBox.setContent('iframe',record.json.order);},scope:this}]);var layerOrderAction=actions[0];this.target.on("layerselectionchange",function(record){selectedLayer=record;layerOrderAction.setDisabled(!record||!record.json||!record.json.order);},this);return actions;}});Ext.preg(sdi.plugins.LayerOrder.prototype.ptype,sdi.plugins.LayerOrder);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.OLSource=Ext.extend(gxp.plugins.OLSource,{ptype:"sdi_gxp_olsource",createLayerRecord:function(config){var record=sdi.gxp.plugins.OLSource.superclass.createLayerRecord.apply(this,arguments);record.json=config;return record;}});Ext.preg(sdi.gxp.plugins.OLSource.prototype.ptype,sdi.gxp.plugins.OLSource);