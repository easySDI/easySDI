//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-520 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.03.13 at 04:39:39 PM CET 
//


package ch.interlis.interlis2.GM03V18;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GM03Comprehensive.Comprehensive.MD_DimensionNameTypeCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="GM03Comprehensive.Comprehensive.MD_DimensionNameTypeCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="row"/>
 *     &lt;enumeration value="column"/>
 *     &lt;enumeration value="vertical"/>
 *     &lt;enumeration value="track"/>
 *     &lt;enumeration value="crossTrack"/>
 *     &lt;enumeration value="line"/>
 *     &lt;enumeration value="sample"/>
 *     &lt;enumeration value="time"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "GM03Comprehensive.Comprehensive.MD_DimensionNameTypeCode")
@XmlEnum
public enum GM03ComprehensiveComprehensiveMDDimensionNameTypeCode {

    @XmlEnumValue("row")
    ROW("row"),
    @XmlEnumValue("column")
    COLUMN("column"),
    @XmlEnumValue("vertical")
    VERTICAL("vertical"),
    @XmlEnumValue("track")
    TRACK("track"),
    @XmlEnumValue("crossTrack")
    CROSS_TRACK("crossTrack"),
    @XmlEnumValue("line")
    LINE("line"),
    @XmlEnumValue("sample")
    SAMPLE("sample"),
    @XmlEnumValue("time")
    TIME("time");
    private final String value;

    GM03ComprehensiveComprehensiveMDDimensionNameTypeCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GM03ComprehensiveComprehensiveMDDimensionNameTypeCode fromValue(String v) {
        for (GM03ComprehensiveComprehensiveMDDimensionNameTypeCode c: GM03ComprehensiveComprehensiveMDDimensionNameTypeCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
