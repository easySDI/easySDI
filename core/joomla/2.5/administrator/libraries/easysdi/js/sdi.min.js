
Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.LayerTree=Ext.extend(gxp.plugins.LayerTree,{ptype:"sdi_gxp_layertree",createOutputConfig:function(){var treeRoot=new Ext.tree.TreeNode({text:this.rootNodeText,expanded:true,checked:false,isTarget:false,allowDrop:false,iconCls:"sdi-gxp-tree-node-root",listeners:{checkchange:function(node,checked){node.eachChild(function(n){n.getUI().toggleCheck(checked);});}}});var defaultGroup=this.defaultGroup,plugin=this,groupConfig,exclusive;for(var group in this.groups){groupConfig=typeof this.groups[group]=="string"?{title:this.groups[group]}:this.groups[group];exclusive=groupConfig.exclusive;treeRoot.appendChild(new GeoExt.tree.LayerContainer(Ext.apply({text:groupConfig.title,iconCls:"gxp-folder",expanded:true,checked:false,group:group==this.defaultGroup?undefined:group,loader:new GeoExt.tree.LayerLoader({baseAttrs:exclusive?{checkedGroup:Ext.isString(exclusive)?exclusive:group}:undefined,store:this.target.mapPanel.layers,filter:(function(group){return function(record){return(record.get("group")||defaultGroup)==group&&record.getLayer().displayInLayerSwitcher==true;};})(group),createNode:function(attr){plugin.configureLayerNode(this,attr);return GeoExt.tree.LayerLoader.prototype.createNode.apply(this,arguments);}}),singleClickExpand:true,allowDrag:false,listeners:{append:function(tree,node){node.expand();},checkchange:function(node,checked){node.eachChild(function(n){n.getUI().toggleCheck(checked);});}}},groupConfig)));}
return{xtype:"treepanel",root:treeRoot,rootVisible:true,shortTitle:this.shortTitle,border:false,enableDD:true,selModel:new Ext.tree.DefaultSelectionModel({listeners:{beforeselect:this.handleBeforeSelect,scope:this}}),listeners:{contextmenu:this.handleTreeContextMenu,beforemovenode:this.handleBeforeMoveNode,scope:this},contextMenu:new Ext.menu.Menu({items:[]})};},configureLayerNode:function(loader,attr){attr.uiProvider=this.treeNodeUI;var layer=attr.layer;var store=attr.layerStore;if(layer&&store){var record=store.getAt(store.findBy(function(r){return r.getLayer()===layer;}));if(record){attr.qtip=record.get('abstract');if(!record.get("queryable")){attr.iconCls="gxp-tree-rasterlayer-icon";}
if(record.get("fixed")){attr.allowDrag=false;}
if(record.json)
{if(record.json.metadataURL)
{attr.href=record.json.metadataURL;attr.hrefTarget="_blank";attr.cls="sdiMDlink";}}
if(record.data)
{if(record.data.metadataURL)
{attr.href=record.data.metadataURL;attr.hrefTarget="_blank";attr.cls="sdiMDlink";}}
if(layer.metadataURL)
{attr.href=layer.metadataURL;attr.hrefTarget="_blank";attr.cls="sdiMDlink";}
attr.listeners={rendernode:function(node){if(record===this.target.selectedLayer){node.select();}
this.target.on("layerselectionchange",function(rec){if(!this.selectionChanging&&rec===record){node.select();}},this);},scope:this};}}},});Ext.preg(sdi.gxp.plugins.LayerTree.prototype.ptype,sdi.gxp.plugins.LayerTree);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.Print=Ext.extend(gxp.plugins.Print,{ptype:"sdi_gxp_print",constructor:function(config){sdi.gxp.plugins.Print.superclass.constructor.apply(this,arguments);},addActions:function(){if(this.printService!==null||this.printCapabilities!=null){var printProvider=new sdi.geoext.data.PrintProvider({capabilities:this.printCapabilities,url:this.printService,printurl:this.printURL,createurl:this.createURL,customParams:this.customParams,autoLoad:false,listeners:{beforedownload:function(provider,url){if(this.openInNewWindow===true){window.open(url);return false;}},beforeencodelegend:function(provider,jsonData,legend){if(legend&&legend.ptype==="gxp_layermanager"){var encodedLegends=[];var output=legend.output;if(output&&output[0]){output[0].getRootNode().cascade(function(node){if(node.component&&!node.component.hidden){var cmp=node.component;var encFn=this.encoders.legends[cmp.getXType()];encodedLegends=encodedLegends.concat(encFn.call(this,cmp,jsonData.pages[0].scale));}},provider);}
jsonData.legends=encodedLegends;return false;}},beforeprint:function(){printWindow.items.get(0).printMapPanel.layers.each(function(l){var params=l.get("layer").params;for(var p in params){if(params[p]instanceof Array){params[p]=params[p].join(",");}}});},loadcapabilities:function(){if(printButton){printButton.initialConfig.disabled=false;printButton.enable();}},print:function(){try{printWindow.close();}catch(err){}},printException:function(cmp,response){this.target.displayXHRTrouble&&this.target.displayXHRTrouble(response);},scope:this}});var actions=gxp.plugins.Print.superclass.addActions.call(this,[{menuText:this.menuText,buttonText:this.buttonText,tooltip:this.tooltip,iconCls:"gxp-icon-print",disabled:this.printCapabilities!==null?false:true,handler:function(){var supported=getPrintableLayers();if(supported.length>0){var printWindow=createPrintWindow.call(this);showPrintWindow.call(this);return printWindow;}else{Ext.Msg.alert(this.notAllNotPrintableText,this.nonePrintableText);}},scope:this,listeners:{render:function(){printProvider.loadCapabilities();}}}]);var printButton=actions[0].items[0];var printWindow;function destroyPrintComponents(){if(printWindow){try{var panel=printWindow.items.first();panel.printMapPanel.printPage.destroy();}catch(err){}
printWindow=null;}}
var mapPanel=this.target.mapPanel;function getPrintableLayers(){var supported=[];mapPanel.layers.each(function(record){var layer=record.getLayer();if(isPrintable(layer)){supported.push(layer);}});return supported;}
function isPrintable(layer){return layer.getVisibility()===true&&(layer instanceof OpenLayers.Layer.WMS||layer instanceof OpenLayers.Layer.OSM||layer instanceof OpenLayers.Layer.WMTS);}
function createPrintWindow(){var legend=null;if(this.includeLegend===true){var key,tool;for(key in this.target.tools){tool=this.target.tools[key];if(tool.ptype==="gxp_legend"){legend=tool.getLegendPanel();break;}}
if(legend===null){for(key in this.target.tools){tool=this.target.tools[key];if(tool.ptype==="gxp_layermanager"){legend=tool;break;}}}}
printWindow=new Ext.Window({title:this.previewText,modal:true,border:false,autoHeight:true,resizable:false,width:360,items:[new sdi.geoext.ux.PrintPreview({minWidth:336,mapTitle:this.target.about&&this.target.about["title"],comment:this.target.about&&this.target.about["abstract"],printMapPanel:{autoWidth:true,height:Math.min(420,Ext.get(document.body).getHeight()-150),limitScales:true,map:Ext.applyIf({controls:[new OpenLayers.Control.Navigation({zoomWheelEnabled:false,zoomBoxEnabled:false}),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel(),new OpenLayers.Control.Attribution()],eventListeners:{preaddlayer:function(evt){return isPrintable(evt.layer);}}},mapPanel.initialConfig.map),items:[{xtype:"gx_zoomslider",vertical:true,height:100,aggressive:true}],listeners:{afterlayout:function(evt){printWindow.setWidth(Math.max(360,this.getWidth()+24));printWindow.center();}}},printProvider:printProvider,includeLegend:this.includeLegend,legend:legend,sourceMap:mapPanel})],listeners:{beforedestroy:destroyPrintComponents}});return printWindow;}
function showPrintWindow(){printWindow.show();printWindow.setWidth(0);var tb=printWindow.items.get(0).items.get(0);var w=0;tb.items.each(function(item){if(item.getEl()){w+=item.getWidth();}});printWindow.setWidth(Math.max(printWindow.items.get(0).printMapPanel.getWidth(),w+20));printWindow.center();}
return actions;}}});Ext.preg(sdi.gxp.plugins.Print.prototype.ptype,sdi.gxp.plugins.Print);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.LayerManager=Ext.extend(sdi.gxp.plugins.LayerTree,{ptype:"sdi_gxp_layermanager",baseNodeText:"Base Maps",createOutputConfig:function(){var tree=sdi.gxp.plugins.LayerManager.superclass.createOutputConfig.apply(this,arguments);Ext.applyIf(tree,Ext.apply({cls:"gxp-layermanager-tree",lines:false,useArrows:true,plugins:[{ptype:"gx_treenodecomponent"}]},this.treeConfig));return tree;},configureLayerNode:function(loader,attr){sdi.gxp.plugins.LayerManager.superclass.configureLayerNode.apply(this,arguments);var legendXType;if(OpenLayers.Layer.WMS&&attr.layer instanceof OpenLayers.Layer.WMS){legendXType="gx_wmslegend";}else if(OpenLayers.Layer.Vector&&attr.layer instanceof OpenLayers.Layer.Vector){legendXType="gx_vectorlegend";}
if(legendXType){Ext.apply(attr,{component:{xtype:legendXType,baseParams:{transparent:true,format:"image/png",legend_options:"fontAntiAliasing:true;fontSize:11;fontName:Arial"},layerRecord:this.target.mapPanel.layers.getByLayer(attr.layer),showTitle:false,cls:"legend"}});}}});Ext.preg(sdi.gxp.plugins.LayerManager.prototype.ptype,sdi.gxp.plugins.LayerManager);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.BingSource=Ext.extend(gxp.plugins.BingSource,{ptype:"sdi_gxp_bingsource",createLayerRecord:function(config){var record=sdi.gxp.plugins.BingSource.superclass.createLayerRecord.apply(this,arguments);record.set("metadataURL",config.metadataURL);record.commit();return record;}});Ext.preg(sdi.gxp.plugins.BingSource.prototype.ptype,sdi.gxp.plugins.BingSource);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.GoogleSource,{ptype:"sdi_gxp_googlesource",createLayerRecord:function(config){var record=sdi.gxp.plugins.GoogleSource.superclass.createLayerRecord.apply(this,arguments);record.set("metadataURL",config.metadataURL);record.commit();return record;}});Ext.preg(sdi.gxp.plugins.GoogleSource.prototype.ptype,sdi.gxp.plugins.GoogleSource);Ext.namespace("sdi.gxp.plugins");sdi.gxp.plugins.OSMSource=Ext.extend(gxp.plugins.OSMSource,{ptype:"sdi_gxp_osmsource",createLayerRecord:function(config){var record=sdi.gxp.plugins.OSMSource.superclass.createLayerRecord.apply(this,arguments);record.set("metadataURL",config.metadataURL);record.commit();return record;}});Ext.preg(sdi.gxp.plugins.OSMSource.prototype.ptype,sdi.gxp.plugins.OSMSource);Ext.namespace("sdi.geoext.data");sdi.geoext.data.PrintProvider=Ext.extend(GeoExt.data.PrintProvider,{loadCapabilities:function(){if(!this.url){return;}
var url=this.url+"info.json";Ext.Ajax.request({url:url,method:"GET",disableCaching:false,success:function(response){this.capabilities=Ext.decode(response.responseText);this.capabilities.createURL=this.createurl;this.capabilities.printURL=this.printurl;this.loadStores();},params:this.initialConfig.baseParams,scope:this});}});Ext.namespace("sdi.geoext.ux");sdi.geoext.ux.PrintPreview=Ext.extend(GeoExt.ux.PrintPreview,{initComponent:function(){var printMapPanelOptions={sourceMap:this.sourceMap,printProvider:this.printProvider};if(this.printMapPanel){if(!(this.printMapPanel instanceof GeoExt.PrintMapPanel)){printMapPanelOptions.xtype="gx_printmappanel";this.printMapPanel=new sdi.geoext.widgets.PrintMapPanel(Ext.applyIf(this.printMapPanel,printMapPanelOptions));}}else{this.printMapPanel=new sdi.geoext.widgets.PrintMapPanel(printMapPanelOptions);}
this.sourceMap=this.printMapPanel.sourceMap;this.printProvider=this.printMapPanel.printProvider;this.form=this.createForm();if(!this.items){this.items=[];}
this.items.push(this.createToolbar(),{xtype:"container",cls:"gx-printpreview",autoHeight:this.autoHeight,autoWidth:this.autoWidth,items:[this.form,this.printMapPanel]});GeoExt.ux.PrintPreview.superclass.initComponent.call(this);this.addMapOverlay&&this.printMapPanel.add(this.createMapOverlay());this.printMapPanel.on({"resize":this.updateSize,scope:this});this.on({"render":function(){if(!this.busyMask){this.busyMask=new Ext.LoadMask(this.getEl(),{msg:this.creatingPdfText});}
this.printProvider.on({"beforeprint":this.busyMask.show,"print":this.busyMask.hide,"printexception":this.busyMask.hide,scope:this.busyMask});},scope:this});}});Ext.namespace("sdi.geoext.widgets");sdi.geoext.widgets.PrintMapPanel=Ext.extend(GeoExt.PrintMapPanel,{initComponent:function(){if(this.sourceMap instanceof GeoExt.MapPanel){this.sourceMap=this.sourceMap.map;}
if(!this.map){this.map={};}
Ext.applyIf(this.map,{projection:this.sourceMap.getProjection(),maxExtent:this.sourceMap.getMaxExtent(),maxResolution:this.sourceMap.getMaxResolution(),units:this.sourceMap.getUnits()});if(!(this.printProvider instanceof GeoExt.data.PrintProvider)){this.printProvider=new GeoExt.data.PrintProvider(this.printProvider);}
this.printPage=new GeoExt.data.PrintPage({printProvider:this.printProvider});this.previewScales=new Ext.data.Store();this.previewScales.add(this.printProvider.scales.getRange());this.layers=[];var layer;Ext.each(this.sourceMap.layers,function(layer){if(layer.getVisibility()===true){if(layer instanceof OpenLayers.Layer.Vector){var features=layer.features,clonedFeatures=new Array(features.length),vector=new OpenLayers.Layer.Vector(layer.name);for(var i=0,ii=features.length;i<ii;++i){clonedFeatures[i]=features[i].clone();}
vector.addFeatures(clonedFeatures,{silent:true});this.layers.push(vector);}else{var l=layer.clone();l.setVisibility(layer.getVisibility());this.layers.push(l);}}},this);this.extent=this.sourceMap.getExtent();GeoExt.PrintMapPanel.superclass.initComponent.call(this);}});