//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-520 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.02.11 at 10:09:19 AM CET 
//


package ch.depth.proxy.configuration;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ch.depth.proxy.configuration package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ch.depth.proxy.configuration
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Configurations.Config.AvailabilityPeriod.From }
     * 
     */
    public Configurations.Config.AvailabilityPeriod.From createConfigurationsConfigAvailabilityPeriodFrom() {
        return new Configurations.Config.AvailabilityPeriod.From();
    }

    /**
     * Create an instance of {@link Configurations.Config.LogConfig.FileStructure }
     * 
     */
    public Configurations.Config.LogConfig.FileStructure createConfigurationsConfigLogConfigFileStructure() {
        return new Configurations.Config.LogConfig.FileStructure();
    }

    /**
     * Create an instance of {@link Configurations.Config.LogConfig }
     * 
     */
    public Configurations.Config.LogConfig createConfigurationsConfigLogConfig() {
        return new Configurations.Config.LogConfig();
    }

    /**
     * Create an instance of {@link Configurations.Config.XsltPath }
     * 
     */
    public Configurations.Config.XsltPath createConfigurationsConfigXsltPath() {
        return new Configurations.Config.XsltPath();
    }

    /**
     * Create an instance of {@link Configurations.Config.AvailabilityPeriod }
     * 
     */
    public Configurations.Config.AvailabilityPeriod createConfigurationsConfigAvailabilityPeriod() {
        return new Configurations.Config.AvailabilityPeriod();
    }

    /**
     * Create an instance of {@link Configurations.Config.AvailabilityPeriod.To }
     * 
     */
    public Configurations.Config.AvailabilityPeriod.To createConfigurationsConfigAvailabilityPeriodTo() {
        return new Configurations.Config.AvailabilityPeriod.To();
    }

    /**
     * Create an instance of {@link Configurations.Config.Authorization }
     * 
     */
    public Configurations.Config.Authorization createConfigurationsConfigAuthorization() {
        return new Configurations.Config.Authorization();
    }

    /**
     * Create an instance of {@link Configurations }
     * 
     */
    public Configurations createConfigurations() {
        return new Configurations();
    }

    /**
     * Create an instance of {@link Configurations.Config }
     * 
     */
    public Configurations.Config createConfigurationsConfig() {
        return new Configurations.Config();
    }

    /**
     * Create an instance of {@link Configurations.Config.RemoteServerList.RemoteServer }
     * 
     */
    public Configurations.Config.RemoteServerList.RemoteServer createConfigurationsConfigRemoteServerListRemoteServer() {
        return new Configurations.Config.RemoteServerList.RemoteServer();
    }

    /**
     * Create an instance of {@link Configurations.Config.RemoteServerList }
     * 
     */
    public Configurations.Config.RemoteServerList createConfigurationsConfigRemoteServerList() {
        return new Configurations.Config.RemoteServerList();
    }

}
