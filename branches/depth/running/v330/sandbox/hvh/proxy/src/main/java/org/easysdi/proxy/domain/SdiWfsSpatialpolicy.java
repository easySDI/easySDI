package org.easysdi.proxy.domain;

// Generated Apr 9, 2013 11:54:41 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * SdiWfsSpatialpolicy generated by hbm2java
 */
@Entity
@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
public class SdiWfsSpatialpolicy implements java.io.Serializable {

	private Integer Id;
	private String Localgeographicfilter;
	private String Remotegeographicfilter;
	private Set<SdiFeaturetypePolicy> sdiFeaturetypePolicies = new HashSet<SdiFeaturetypePolicy>(
			0);
	private Set<SdiPhysicalservicePolicy> sdiPhysicalservicePolicies = new HashSet<SdiPhysicalservicePolicy>(
			0);
	private Set<SdiPolicy> sdiPolicies = new HashSet<SdiPolicy>(0);

	public SdiWfsSpatialpolicy() {
	}

	public SdiWfsSpatialpolicy(String Localgeographicfilter,
			String Remotegeographicfilter,
			Set<SdiFeaturetypePolicy> sdiFeaturetypePolicies,
			Set<SdiPhysicalservicePolicy> sdiPhysicalservicePolicies,
			Set<SdiPolicy> sdiPolicies) {
		this.Localgeographicfilter = Localgeographicfilter;
		this.Remotegeographicfilter = Remotegeographicfilter;
		this.sdiFeaturetypePolicies = sdiFeaturetypePolicies;
		this.sdiPhysicalservicePolicies = sdiPhysicalservicePolicies;
		this.sdiPolicies = sdiPolicies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.Id;
	}

	public void setId(Integer Id) {
		this.Id = Id;
	}

	@Column(name = "localgeographicfilter", length = 65535)
	public String getLocalgeographicfilter() {
		return this.Localgeographicfilter;
	}

	public void setLocalgeographicfilter(String Localgeographicfilter) {
		this.Localgeographicfilter = Localgeographicfilter;
	}

	@Column(name = "remotegeographicfilter", length = 65535)
	public String getRemotegeographicfilter() {
		return this.Remotegeographicfilter;
	}

	public void setRemotegeographicfilter(String Remotegeographicfilter) {
		this.Remotegeographicfilter = Remotegeographicfilter;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdiWfsSpatialpolicy")
	public Set<SdiFeaturetypePolicy> getSdiFeaturetypePolicies() {
		return this.sdiFeaturetypePolicies;
	}

	public void setSdiFeaturetypePolicies(
			Set<SdiFeaturetypePolicy> sdiFeaturetypePolicies) {
		this.sdiFeaturetypePolicies = sdiFeaturetypePolicies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdiWfsSpatialpolicy")
	public Set<SdiPhysicalservicePolicy> getSdiPhysicalservicePolicies() {
		return this.sdiPhysicalservicePolicies;
	}

	public void setSdiPhysicalservicePolicies(
			Set<SdiPhysicalservicePolicy> sdiPhysicalservicePolicies) {
		this.sdiPhysicalservicePolicies = sdiPhysicalservicePolicies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdiWfsSpatialpolicy")
	public Set<SdiPolicy> getSdiPolicies() {
		return this.sdiPolicies;
	}

	public void setSdiPolicies(Set<SdiPolicy> sdiPolicies) {
		this.sdiPolicies = sdiPolicies;
	}

}
