package org.easysdi.proxy.domain;

// Generated Apr 4, 2013 10:31:47 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * SdiVirtualservice generated by hbm2java
 */
@Entity
@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
public class SdiVirtualservice implements java.io.Serializable {

	private Integer Id;
	private SdiSysServicescope sdiSysServicescope;
	private SdiSysLogroll sdiSysLogroll;
	private SdiSysExceptionlevel sdiSysExceptionlevel;
	private SdiSysProxytype sdiSysProxytype;
	private SdiSysServiceconnector sdiSysServiceconnector;
	private SdiSysLoglevel sdiSysLoglevel;
	private String Guid;
	private Integer Ordering;
	private int State;
	private int Checked_out;
	private Date Checked_out_time;
	private int Created_by;
	private Date Created;
	private Integer Modified_by;
	private Date Modified;
	private String Name;
	private String Alias;
	private String Url;
	private String Reflectedurl;
	private boolean Reflectedmetadata;
	private String Xsltfilename;
	private String Logpath;
	private boolean Harvester;
	private Integer Maximumrecords;
	private String Identifiersearchattribute;
	private String Params;
	private int Access;
	private Integer Asset_id;
	private Set<SdiVirtualserviceOrganism> sdiVirtualserviceOrganisms = new HashSet<SdiVirtualserviceOrganism>(
			0);
	private Set<SdiVirtualPhysical> sdiVirtualPhysicals = new HashSet<SdiVirtualPhysical>(
			0);
	private Set<SdiPolicy> sdiPolicies = new HashSet<SdiPolicy>(0);
	private Set<SdiVirtualserviceServicecompliance> sdiVirtualserviceServicecompliances = new HashSet<SdiVirtualserviceServicecompliance>(
			0);
	private Set<SdiVirtualmetadata> sdiVirtualmetadatas = new HashSet<SdiVirtualmetadata>(
			0);

	public SdiVirtualservice() {
	}

	public SdiVirtualservice(SdiSysServicescope sdiSysServicescope,
			SdiSysLogroll sdiSysLogroll,
			SdiSysExceptionlevel sdiSysExceptionlevel,
			SdiSysProxytype sdiSysProxytype,
			SdiSysServiceconnector sdiSysServiceconnector,
			SdiSysLoglevel sdiSysLoglevel, String Guid, int State,
			int Checked_out, Date Checked_out_time, int Created_by,
			Date Created, String Name, String Alias, boolean Reflectedmetadata,
			String Logpath, boolean Harvester, int Access) {
		this.sdiSysServicescope = sdiSysServicescope;
		this.sdiSysLogroll = sdiSysLogroll;
		this.sdiSysExceptionlevel = sdiSysExceptionlevel;
		this.sdiSysProxytype = sdiSysProxytype;
		this.sdiSysServiceconnector = sdiSysServiceconnector;
		this.sdiSysLoglevel = sdiSysLoglevel;
		this.Guid = Guid;
		this.State = State;
		this.Checked_out = Checked_out;
		this.Checked_out_time = Checked_out_time;
		this.Created_by = Created_by;
		this.Created = Created;
		this.Name = Name;
		this.Alias = Alias;
		this.Reflectedmetadata = Reflectedmetadata;
		this.Logpath = Logpath;
		this.Harvester = Harvester;
		this.Access = Access;
	}

	public SdiVirtualservice(
			SdiSysServicescope sdiSysServicescope,
			SdiSysLogroll sdiSysLogroll,
			SdiSysExceptionlevel sdiSysExceptionlevel,
			SdiSysProxytype sdiSysProxytype,
			SdiSysServiceconnector sdiSysServiceconnector,
			SdiSysLoglevel sdiSysLoglevel,
			String Guid,
			Integer Ordering,
			int State,
			int Checked_out,
			Date Checked_out_time,
			int Created_by,
			Date Created,
			Integer Modified_by,
			Date Modified,
			String Name,
			String Alias,
			String Url,
			String Reflectedurl,
			boolean Reflectedmetadata,
			String Xsltfilename,
			String Logpath,
			boolean Harvester,
			Integer Maximumrecords,
			String Identifiersearchattribute,
			String Params,
			int Access,
			Integer Asset_id,
			Set<SdiVirtualserviceOrganism> sdiVirtualserviceOrganisms,
			Set<SdiVirtualPhysical> sdiVirtualPhysicals,
			Set<SdiPolicy> sdiPolicies,
			Set<SdiVirtualserviceServicecompliance> sdiVirtualserviceServicecompliances,
			Set<SdiVirtualmetadata> sdiVirtualmetadatas) {
		this.sdiSysServicescope = sdiSysServicescope;
		this.sdiSysLogroll = sdiSysLogroll;
		this.sdiSysExceptionlevel = sdiSysExceptionlevel;
		this.sdiSysProxytype = sdiSysProxytype;
		this.sdiSysServiceconnector = sdiSysServiceconnector;
		this.sdiSysLoglevel = sdiSysLoglevel;
		this.Guid = Guid;
		this.Ordering = Ordering;
		this.State = State;
		this.Checked_out = Checked_out;
		this.Checked_out_time = Checked_out_time;
		this.Created_by = Created_by;
		this.Created = Created;
		this.Modified_by = Modified_by;
		this.Modified = Modified;
		this.Name = Name;
		this.Alias = Alias;
		this.Url = Url;
		this.Reflectedurl = Reflectedurl;
		this.Reflectedmetadata = Reflectedmetadata;
		this.Xsltfilename = Xsltfilename;
		this.Logpath = Logpath;
		this.Harvester = Harvester;
		this.Maximumrecords = Maximumrecords;
		this.Identifiersearchattribute = Identifiersearchattribute;
		this.Params = Params;
		this.Access = Access;
		this.Asset_id = Asset_id;
		this.sdiVirtualserviceOrganisms = sdiVirtualserviceOrganisms;
		this.sdiVirtualPhysicals = sdiVirtualPhysicals;
		this.sdiPolicies = sdiPolicies;
		this.sdiVirtualserviceServicecompliances = sdiVirtualserviceServicecompliances;
		this.sdiVirtualmetadatas = sdiVirtualmetadatas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.Id;
	}

	public void setId(Integer Id) {
		this.Id = Id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "servicescope_id", nullable = false)
	public SdiSysServicescope getSdiSysServicescope() {
		return this.sdiSysServicescope;
	}

	public void setSdiSysServicescope(SdiSysServicescope sdiSysServicescope) {
		this.sdiSysServicescope = sdiSysServicescope;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "logroll_id", nullable = false)
	public SdiSysLogroll getSdiSysLogroll() {
		return this.sdiSysLogroll;
	}

	public void setSdiSysLogroll(SdiSysLogroll sdiSysLogroll) {
		this.sdiSysLogroll = sdiSysLogroll;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exceptionlevel_id", nullable = false)
	public SdiSysExceptionlevel getSdiSysExceptionlevel() {
		return this.sdiSysExceptionlevel;
	}

	public void setSdiSysExceptionlevel(
			SdiSysExceptionlevel sdiSysExceptionlevel) {
		this.sdiSysExceptionlevel = sdiSysExceptionlevel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "proxytype_id", nullable = false)
	public SdiSysProxytype getSdiSysProxytype() {
		return this.sdiSysProxytype;
	}

	public void setSdiSysProxytype(SdiSysProxytype sdiSysProxytype) {
		this.sdiSysProxytype = sdiSysProxytype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "serviceconnector_id", nullable = false)
	public SdiSysServiceconnector getSdiSysServiceconnector() {
		return this.sdiSysServiceconnector;
	}

	public void setSdiSysServiceconnector(
			SdiSysServiceconnector sdiSysServiceconnector) {
		this.sdiSysServiceconnector = sdiSysServiceconnector;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "loglevel_id", nullable = false)
	public SdiSysLoglevel getSdiSysLoglevel() {
		return this.sdiSysLoglevel;
	}

	public void setSdiSysLoglevel(SdiSysLoglevel sdiSysLoglevel) {
		this.sdiSysLoglevel = sdiSysLoglevel;
	}

	@Column(name = "guid", nullable = false, length = 36)
	public String getGuid() {
		return this.Guid;
	}

	public void setGuid(String Guid) {
		this.Guid = Guid;
	}

	@Column(name = "ordering")
	public Integer getOrdering() {
		return this.Ordering;
	}

	public void setOrdering(Integer Ordering) {
		this.Ordering = Ordering;
	}

	@Column(name = "state", nullable = false)
	public int getState() {
		return this.State;
	}

	public void setState(int State) {
		this.State = State;
	}

	@Column(name = "checked_out", nullable = false)
	public int getChecked_out() {
		return this.Checked_out;
	}

	public void setChecked_out(int Checked_out) {
		this.Checked_out = Checked_out;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "checked_out_time", nullable = false, length = 19)
	public Date getChecked_out_time() {
		return this.Checked_out_time;
	}

	public void setChecked_out_time(Date Checked_out_time) {
		this.Checked_out_time = Checked_out_time;
	}

	@Column(name = "created_by", nullable = false)
	public int getCreated_by() {
		return this.Created_by;
	}

	public void setCreated_by(int Created_by) {
		this.Created_by = Created_by;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.Created;
	}

	public void setCreated(Date Created) {
		this.Created = Created;
	}

	@Column(name = "modified_by")
	public Integer getModified_by() {
		return this.Modified_by;
	}

	public void setModified_by(Integer Modified_by) {
		this.Modified_by = Modified_by;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.Modified;
	}

	public void setModified(Date Modified) {
		this.Modified = Modified;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.Name;
	}

	public void setName(String Name) {
		this.Name = Name;
	}

	@Column(name = "alias", nullable = false, length = 20)
	public String getAlias() {
		return this.Alias;
	}

	public void setAlias(String Alias) {
		this.Alias = Alias;
	}

	@Column(name = "url", length = 500)
	public String getUrl() {
		return this.Url;
	}

	public void setUrl(String Url) {
		this.Url = Url;
	}

	@Column(name = "reflectedurl")
	public String getReflectedurl() {
		return this.Reflectedurl;
	}

	public void setReflectedurl(String Reflectedurl) {
		this.Reflectedurl = Reflectedurl;
	}

	@Column(name = "reflectedmetadata", nullable = false)
	public boolean isReflectedmetadata() {
		return this.Reflectedmetadata;
	}

	public void setReflectedmetadata(boolean Reflectedmetadata) {
		this.Reflectedmetadata = Reflectedmetadata;
	}

	@Column(name = "xsltfilename")
	public String getXsltfilename() {
		return this.Xsltfilename;
	}

	public void setXsltfilename(String Xsltfilename) {
		this.Xsltfilename = Xsltfilename;
	}

	@Column(name = "logpath", nullable = false)
	public String getLogpath() {
		return this.Logpath;
	}

	public void setLogpath(String Logpath) {
		this.Logpath = Logpath;
	}

	@Column(name = "harvester", nullable = false)
	public boolean isHarvester() {
		return this.Harvester;
	}

	public void setHarvester(boolean Harvester) {
		this.Harvester = Harvester;
	}

	@Column(name = "maximumrecords")
	public Integer getMaximumrecords() {
		return this.Maximumrecords;
	}

	public void setMaximumrecords(Integer Maximumrecords) {
		this.Maximumrecords = Maximumrecords;
	}

	@Column(name = "identifiersearchattribute")
	public String getIdentifiersearchattribute() {
		return this.Identifiersearchattribute;
	}

	public void setIdentifiersearchattribute(String Identifiersearchattribute) {
		this.Identifiersearchattribute = Identifiersearchattribute;
	}

	@Column(name = "params", length = 1024)
	public String getParams() {
		return this.Params;
	}

	public void setParams(String Params) {
		this.Params = Params;
	}

	@Column(name = "access", nullable = false)
	public int getAccess() {
		return this.Access;
	}

	public void setAccess(int Access) {
		this.Access = Access;
	}

	@Column(name = "asset_id")
	public Integer getAsset_id() {
		return this.Asset_id;
	}

	public void setAsset_id(Integer Asset_id) {
		this.Asset_id = Asset_id;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "sdiVirtualservice")
	@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
	public Set<SdiVirtualserviceOrganism> getSdiVirtualserviceOrganisms() {
		return this.sdiVirtualserviceOrganisms;
	}

	public void setSdiVirtualserviceOrganisms(
			Set<SdiVirtualserviceOrganism> sdiVirtualserviceOrganisms) {
		this.sdiVirtualserviceOrganisms = sdiVirtualserviceOrganisms;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "sdiVirtualservice")
	@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
	public Set<SdiVirtualPhysical> getSdiVirtualPhysicals() {
		return this.sdiVirtualPhysicals;
	}

	public void setSdiVirtualPhysicals(
			Set<SdiVirtualPhysical> sdiVirtualPhysicals) {
		this.sdiVirtualPhysicals = sdiVirtualPhysicals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdiVirtualservice")
	@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
	public Set<SdiPolicy> getSdiPolicies() {
		return this.sdiPolicies;
	}

	public void setSdiPolicies(Set<SdiPolicy> sdiPolicies) {
		this.sdiPolicies = sdiPolicies;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "sdiVirtualservice")
	@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
	public Set<SdiVirtualserviceServicecompliance> getSdiVirtualserviceServicecompliances() {
		return this.sdiVirtualserviceServicecompliances;
	}

	public void setSdiVirtualserviceServicecompliances(
			Set<SdiVirtualserviceServicecompliance> sdiVirtualserviceServicecompliances) {
		this.sdiVirtualserviceServicecompliances = sdiVirtualserviceServicecompliances;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "sdiVirtualservice")
	@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
	public Set<SdiVirtualmetadata> getSdiVirtualmetadatas() {
		return this.sdiVirtualmetadatas;
	}

	public void setSdiVirtualmetadatas(
			Set<SdiVirtualmetadata> sdiVirtualmetadatas) {
		this.sdiVirtualmetadatas = sdiVirtualmetadatas;
	}

}
