package org.easysdi.proxy.domain;

// Generated Mar 15, 2013 2:35:39 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SdiOrganism generated by hbm2java
 */
@Entity
@Table(name = "proxy_sdi_organism", catalog = "proxy330")
public class SdiOrganism implements java.io.Serializable {

	private Integer id;
	private String guid;
	private int createdBy;
	private Date created;
	private Integer modifiedBy;
	private Date modified;
	private int ordering;
	private boolean state;
	private int checkedOut;
	private Date checkedOutTime;
	private String acronym;
	private String description;
	private String logo;
	private String name;
	private String website;
	private int access;
	private int assetId;
	private Set<SdiUserRoleOrganism> sdiUserRoleOrganisms = new HashSet<SdiUserRoleOrganism>(
			0);
	private Set<SdiAddress> sdiAddresses = new HashSet<SdiAddress>(0);

	public SdiOrganism() {
	}

	public SdiOrganism(String guid, int createdBy, Date created, int ordering,
			boolean state, int checkedOut, Date checkedOutTime, String name,
			int access, int assetId) {
		this.guid = guid;
		this.createdBy = createdBy;
		this.created = created;
		this.ordering = ordering;
		this.state = state;
		this.checkedOut = checkedOut;
		this.checkedOutTime = checkedOutTime;
		this.name = name;
		this.access = access;
		this.assetId = assetId;
	}

	public SdiOrganism(String guid, int createdBy, Date created,
			Integer modifiedBy, Date modified, int ordering, boolean state,
			int checkedOut, Date checkedOutTime, String acronym,
			String description, String logo, String name, String website,
			int access, int assetId,
			Set<SdiUserRoleOrganism> sdiUserRoleOrganisms,
			Set<SdiAddress> sdiAddresses) {
		this.guid = guid;
		this.createdBy = createdBy;
		this.created = created;
		this.modifiedBy = modifiedBy;
		this.modified = modified;
		this.ordering = ordering;
		this.state = state;
		this.checkedOut = checkedOut;
		this.checkedOutTime = checkedOutTime;
		this.acronym = acronym;
		this.description = description;
		this.logo = logo;
		this.name = name;
		this.website = website;
		this.access = access;
		this.assetId = assetId;
		this.sdiUserRoleOrganisms = sdiUserRoleOrganisms;
		this.sdiAddresses = sdiAddresses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "guid", nullable = false, length = 36)
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@Column(name = "created_by", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "modified_by")
	public Integer getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Integer modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Column(name = "ordering", nullable = false)
	public int getOrdering() {
		return this.ordering;
	}

	public void setOrdering(int ordering) {
		this.ordering = ordering;
	}

	@Column(name = "state", nullable = false)
	public boolean isState() {
		return this.state;
	}

	public void setState(boolean state) {
		this.state = state;
	}

	@Column(name = "checked_out", nullable = false)
	public int getCheckedOut() {
		return this.checkedOut;
	}

	public void setCheckedOut(int checkedOut) {
		this.checkedOut = checkedOut;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "checked_out_time", nullable = false, length = 19)
	public Date getCheckedOutTime() {
		return this.checkedOutTime;
	}

	public void setCheckedOutTime(Date checkedOutTime) {
		this.checkedOutTime = checkedOutTime;
	}

	@Column(name = "acronym", length = 150)
	public String getAcronym() {
		return this.acronym;
	}

	public void setAcronym(String acronym) {
		this.acronym = acronym;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "logo", length = 500)
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "website", length = 500)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "access", nullable = false)
	public int getAccess() {
		return this.access;
	}

	public void setAccess(int access) {
		this.access = access;
	}

	@Column(name = "asset_id", nullable = false)
	public int getAssetId() {
		return this.assetId;
	}

	public void setAssetId(int assetId) {
		this.assetId = assetId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdiOrganism")
	public Set<SdiUserRoleOrganism> getSdiUserRoleOrganisms() {
		return this.sdiUserRoleOrganisms;
	}

	public void setSdiUserRoleOrganisms(
			Set<SdiUserRoleOrganism> sdiUserRoleOrganisms) {
		this.sdiUserRoleOrganisms = sdiUserRoleOrganisms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdiOrganism")
	public Set<SdiAddress> getSdiAddresses() {
		return this.sdiAddresses;
	}

	public void setSdiAddresses(Set<SdiAddress> sdiAddresses) {
		this.sdiAddresses = sdiAddresses;
	}

}
