package org.easysdi.proxy.domain;

// Generated Apr 9, 2013 11:54:41 AM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * SdiVirtualserviceServicecompliance generated by hbm2java
 */
@Entity
@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
public class SdiVirtualserviceServicecompliance implements java.io.Serializable {

	private Integer Id;
	private SdiVirtualservice sdiVirtualservice;
	private SdiSysServicecompliance sdiSysServicecompliance;

	public SdiVirtualserviceServicecompliance() {
	}

	public SdiVirtualserviceServicecompliance(
			SdiVirtualservice sdiVirtualservice,
			SdiSysServicecompliance sdiSysServicecompliance) {
		this.sdiVirtualservice = sdiVirtualservice;
		this.sdiSysServicecompliance = sdiSysServicecompliance;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.Id;
	}

	public void setId(Integer Id) {
		this.Id = Id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "service_id", nullable = false)
	public SdiVirtualservice getSdiVirtualservice() {
		return this.sdiVirtualservice;
	}

	public void setSdiVirtualservice(SdiVirtualservice sdiVirtualservice) {
		this.sdiVirtualservice = sdiVirtualservice;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "servicecompliance_id", nullable = false)
	public SdiSysServicecompliance getSdiSysServicecompliance() {
		return this.sdiSysServicecompliance;
	}

	public void setSdiSysServicecompliance(
			SdiSysServicecompliance sdiSysServicecompliance) {
		this.sdiSysServicecompliance = sdiSysServicecompliance;
	}

}
